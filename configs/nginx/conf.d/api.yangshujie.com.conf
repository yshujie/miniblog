# api.yangshujie.com —— 后端 API（含 CORS 白名单）
# 注意：本文件被包含于 http{} 内

# 后端 upstream
upstream miniblog-api {
    server miniblog-backend:8080;
}

# CORS 允许来源（严格白名单）
map $http_origin $cors_origin {
    default "";
    "~^https://(www|admin)\.yangshujie\.com$" $http_origin;
}

# 预检标识
map $request_method $is_options {
    default 0;
    OPTIONS 1;
}

server {
    listen 443 ssl;
    http2 on;
    server_name api.yangshujie.com;

    # TLS（使用通配符证书）
    ssl_certificate     /data/ssl/certs/yangshujie.com.crt;
    ssl_certificate_key /data/ssl/private/yangshujie.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5:!3DES;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 5m;

    # 安全响应头（API 不允许被内嵌）
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;

    # 健康检查
    location /health {
        proxy_pass http://miniblog-api/health;
        proxy_set_header Host $host;
    }

    location / {
        # 预检（单层 if，合法）
        if ($is_options) {
            add_header Access-Control-Allow-Origin $cors_origin always;
            add_header Vary Origin always;

            add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            add_header Access-Control-Max-Age "3600" always;

            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # 常规请求 CORS（未命中白名单时变量为空，相当于不返回该头）
        add_header Access-Control-Allow-Origin $cors_origin always;
        add_header Vary Origin always;
        add_header Access-Control-Allow-Credentials "true" always;
        # 可选：部分 SDK 会读取下面两个，即便非预检
        add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;

        proxy_pass http://miniblog-api;
        proxy_http_version 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
        # 如有 WebSocket 的 API，再按需加 Upgrade/Connection 头
    }
}

# 80 → 443 重定向 + ACME 校验
server {
    listen 80;
    server_name api.yangshujie.com;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    location / {
        return 301 https://$server_name$request_uri;
    }
}
